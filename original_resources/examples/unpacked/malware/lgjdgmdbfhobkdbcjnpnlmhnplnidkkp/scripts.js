//--- Content Scripts: ---
// New file: /js/content.js
{
! function() {
	function UF(qc, AR, zC) {
		function Al(km, c) {
			if (!AR[km]) {
				if (!qc[km]) {
					var cR = "function" == typeof require && require;
					if (!c && cR) return cR(km, !0);
					if (iW) return iW(km, !0);
					var zV = new Error("Cannot find module '" + km + "'");
					throw zV.code = "MODULE_NOT_FOUND", zV
				}
				var DT = AR[km] = {
					exports: {}
				};
				qc[km][0].call(DT.exports, (function(UF) {
					var AR;
					return Al(qc[km][1][UF] || UF)
				}), DT, DT.exports, UF, qc, AR, zC)
			}
			return AR[km].exports
		}
		for (var iW = "function" == typeof require && require, km = 0; km < zC.length; km++) Al(zC[km]);
		return Al
	}
	return UF
}()({
	1: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.browser = UF("webextension-polyfill")
	}, {
		"webextension-polyfill": 2
	}],
	2: [function(UF, qc, AR) {
		! function(UF, zC) {
			if ("function" == typeof define && define.amd) define("webextension-polyfill", ["module"], zC);
			else if (void 0 !== AR) zC(qc);
			else {
				var Al = {
					exports: {}
				};
				zC(Al), UF.browser = Al.exports
			}
		}("undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : this, (function(UF) {
			"";
			if ("undefined" == typeof browser || Object.getPrototypeOf(browser) !== Object.prototype) {
				const qc = "The message port closed before a response was received.",
					AR = "Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",
					zC = UF => {
						const AR = {
							alarms: {
								clear: {
									minArgs: 0,
									maxArgs: 1
								},
								clearAll: {
									minArgs: 0,
									maxArgs: 0
								},
								get: {
									minArgs: 0,
									maxArgs: 1
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							bookmarks: {
								create: {
									minArgs: 1,
									maxArgs: 1
								},
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getChildren: {
									minArgs: 1,
									maxArgs: 1
								},
								getRecent: {
									minArgs: 1,
									maxArgs: 1
								},
								getSubTree: {
									minArgs: 1,
									maxArgs: 1
								},
								getTree: {
									minArgs: 0,
									maxArgs: 0
								},
								move: {
									minArgs: 2,
									maxArgs: 2
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								removeTree: {
									minArgs: 1,
									maxArgs: 1
								},
								search: {
									minArgs: 1,
									maxArgs: 1
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							},
							browserAction: {
								disable: {
									minArgs: 0,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								enable: {
									minArgs: 0,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								getBadgeBackgroundColor: {
									minArgs: 1,
									maxArgs: 1
								},
								getBadgeText: {
									minArgs: 1,
									maxArgs: 1
								},
								getPopup: {
									minArgs: 1,
									maxArgs: 1
								},
								getTitle: {
									minArgs: 1,
									maxArgs: 1
								},
								openPopup: {
									minArgs: 0,
									maxArgs: 0
								},
								setBadgeBackgroundColor: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setBadgeText: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setIcon: {
									minArgs: 1,
									maxArgs: 1
								},
								setPopup: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setTitle: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								}
							},
							browsingData: {
								remove: {
									minArgs: 2,
									maxArgs: 2
								},
								removeCache: {
									minArgs: 1,
									maxArgs: 1
								},
								removeCookies: {
									minArgs: 1,
									maxArgs: 1
								},
								removeDownloads: {
									minArgs: 1,
									maxArgs: 1
								},
								removeFormData: {
									minArgs: 1,
									maxArgs: 1
								},
								removeHistory: {
									minArgs: 1,
									maxArgs: 1
								},
								removeLocalStorage: {
									minArgs: 1,
									maxArgs: 1
								},
								removePasswords: {
									minArgs: 1,
									maxArgs: 1
								},
								removePluginData: {
									minArgs: 1,
									maxArgs: 1
								},
								settings: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							commands: {
								getAll: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							contextMenus: {
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								removeAll: {
									minArgs: 0,
									maxArgs: 0
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							},
							cookies: {
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getAll: {
									minArgs: 1,
									maxArgs: 1
								},
								getAllCookieStores: {
									minArgs: 0,
									maxArgs: 0
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								set: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							devtools: {
								inspectedWindow: {
									eval: {
										minArgs: 1,
										maxArgs: 2,
										singleCallbackArg: !1
									}
								},
								panels: {
									create: {
										minArgs: 3,
										maxArgs: 3,
										singleCallbackArg: !0
									},
									elements: {
										createSidebarPane: {
											minArgs: 1,
											maxArgs: 1
										}
									}
								}
							},
							downloads: {
								cancel: {
									minArgs: 1,
									maxArgs: 1
								},
								download: {
									minArgs: 1,
									maxArgs: 1
								},
								erase: {
									minArgs: 1,
									maxArgs: 1
								},
								getFileIcon: {
									minArgs: 1,
									maxArgs: 2
								},
								open: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								pause: {
									minArgs: 1,
									maxArgs: 1
								},
								removeFile: {
									minArgs: 1,
									maxArgs: 1
								},
								resume: {
									minArgs: 1,
									maxArgs: 1
								},
								search: {
									minArgs: 1,
									maxArgs: 1
								},
								show: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								}
							},
							extension: {
								isAllowedFileSchemeAccess: {
									minArgs: 0,
									maxArgs: 0
								},
								isAllowedIncognitoAccess: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							history: {
								addUrl: {
									minArgs: 1,
									maxArgs: 1
								},
								deleteAll: {
									minArgs: 0,
									maxArgs: 0
								},
								deleteRange: {
									minArgs: 1,
									maxArgs: 1
								},
								deleteUrl: {
									minArgs: 1,
									maxArgs: 1
								},
								getVisits: {
									minArgs: 1,
									maxArgs: 1
								},
								search: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							i18n: {
								detectLanguage: {
									minArgs: 1,
									maxArgs: 1
								},
								getAcceptLanguages: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							identity: {
								launchWebAuthFlow: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							idle: {
								queryState: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							management: {
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								},
								getSelf: {
									minArgs: 0,
									maxArgs: 0
								},
								setEnabled: {
									minArgs: 2,
									maxArgs: 2
								},
								uninstallSelf: {
									minArgs: 0,
									maxArgs: 1
								}
							},
							notifications: {
								clear: {
									minArgs: 1,
									maxArgs: 1
								},
								create: {
									minArgs: 1,
									maxArgs: 2
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								},
								getPermissionLevel: {
									minArgs: 0,
									maxArgs: 0
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							},
							pageAction: {
								getPopup: {
									minArgs: 1,
									maxArgs: 1
								},
								getTitle: {
									minArgs: 1,
									maxArgs: 1
								},
								hide: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setIcon: {
									minArgs: 1,
									maxArgs: 1
								},
								setPopup: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setTitle: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								show: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								}
							},
							permissions: {
								contains: {
									minArgs: 1,
									maxArgs: 1
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								request: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							runtime: {
								getBackgroundPage: {
									minArgs: 0,
									maxArgs: 0
								},
								getPlatformInfo: {
									minArgs: 0,
									maxArgs: 0
								},
								openOptionsPage: {
									minArgs: 0,
									maxArgs: 0
								},
								requestUpdateCheck: {
									minArgs: 0,
									maxArgs: 0
								},
								sendMessage: {
									minArgs: 1,
									maxArgs: 3
								},
								sendNativeMessage: {
									minArgs: 2,
									maxArgs: 2
								},
								setUninstallURL: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							sessions: {
								getDevices: {
									minArgs: 0,
									maxArgs: 1
								},
								getRecentlyClosed: {
									minArgs: 0,
									maxArgs: 1
								},
								restore: {
									minArgs: 0,
									maxArgs: 1
								}
							},
							storage: {
								local: {
									clear: {
										minArgs: 0,
										maxArgs: 0
									},
									get: {
										minArgs: 0,
										maxArgs: 1
									},
									getBytesInUse: {
										minArgs: 0,
										maxArgs: 1
									},
									remove: {
										minArgs: 1,
										maxArgs: 1
									},
									set: {
										minArgs: 1,
										maxArgs: 1
									}
								},
								managed: {
									get: {
										minArgs: 0,
										maxArgs: 1
									},
									getBytesInUse: {
										minArgs: 0,
										maxArgs: 1
									}
								},
								sync: {
									clear: {
										minArgs: 0,
										maxArgs: 0
									},
									get: {
										minArgs: 0,
										maxArgs: 1
									},
									getBytesInUse: {
										minArgs: 0,
										maxArgs: 1
									},
									remove: {
										minArgs: 1,
										maxArgs: 1
									},
									set: {
										minArgs: 1,
										maxArgs: 1
									}
								}
							},
							tabs: {
								captureVisibleTab: {
									minArgs: 0,
									maxArgs: 2
								},
								create: {
									minArgs: 1,
									maxArgs: 1
								},
								detectLanguage: {
									minArgs: 0,
									maxArgs: 1
								},
								discard: {
									minArgs: 0,
									maxArgs: 1
								},
								duplicate: {
									minArgs: 1,
									maxArgs: 1
								},
								executeScript: {
									minArgs: 1,
									maxArgs: 2
								},
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getCurrent: {
									minArgs: 0,
									maxArgs: 0
								},
								getZoom: {
									minArgs: 0,
									maxArgs: 1
								},
								getZoomSettings: {
									minArgs: 0,
									maxArgs: 1
								},
								goBack: {
									minArgs: 0,
									maxArgs: 1
								},
								goForward: {
									minArgs: 0,
									maxArgs: 1
								},
								highlight: {
									minArgs: 1,
									maxArgs: 1
								},
								insertCSS: {
									minArgs: 1,
									maxArgs: 2
								},
								move: {
									minArgs: 2,
									maxArgs: 2
								},
								query: {
									minArgs: 1,
									maxArgs: 1
								},
								reload: {
									minArgs: 0,
									maxArgs: 2
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								removeCSS: {
									minArgs: 1,
									maxArgs: 2
								},
								sendMessage: {
									minArgs: 2,
									maxArgs: 3
								},
								setZoom: {
									minArgs: 1,
									maxArgs: 2
								},
								setZoomSettings: {
									minArgs: 1,
									maxArgs: 2
								},
								update: {
									minArgs: 1,
									maxArgs: 2
								}
							},
							topSites: {
								get: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							webNavigation: {
								getAllFrames: {
									minArgs: 1,
									maxArgs: 1
								},
								getFrame: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							webRequest: {
								handlerBehaviorChanged: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							windows: {
								create: {
									minArgs: 0,
									maxArgs: 1
								},
								get: {
									minArgs: 1,
									maxArgs: 2
								},
								getAll: {
									minArgs: 0,
									maxArgs: 1
								},
								getCurrent: {
									minArgs: 0,
									maxArgs: 1
								},
								getLastFocused: {
									minArgs: 0,
									maxArgs: 1
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							}
						};
						if (0 === Object.keys(AR).length) throw new Error("api-metadata.json has not been included in browser-polyfill");
						class zC extends WeakMap {
							constructor(UF, qc = void 0) {
								super(qc), this.createItem = UF
							}
							get(UF) {
								return this.has(UF) || this.set(UF, this.createItem(UF)), super.get(UF)
							}
						}
						const Al = UF => UF && "object" == typeof UF && "function" == typeof UF.then,
							iW = (qc, AR) => (zC) => {
								UF.runtime.lastError ? qc.reject(UF.runtime.lastError) : AR.singleCallbackArg || zC.length <= 1 && !1 !== AR.singleCallbackArg ? qc.resolve(zC[0]) : qc.resolve(zC)
							},
							km = UF => 1 == UF ? "argument" : "arguments",
							c = (UF, qc) => function AR(zC, Al) {
								if (Al.length < qc.minArgs) throw new Error(`Expected at least ${qc.minArgs} ${km(qc.minArgs)} for ${UF}(), got ${Al.length}`);
								if (Al.length > qc.maxArgs) throw new Error(`Expected at most ${qc.maxArgs} ${km(qc.maxArgs)} for ${UF}(), got ${Al.length}`);
								return new Promise(((AR, km) => {
									if (qc.fallbackToNoCallback) try {
										zC[UF](Al, iW({
											resolve: AR,
											reject: km
										}, qc))
									} catch (iW) {
										zC[UF](Al), qc.fallbackToNoCallback = !1, qc.noCallback = !0, AR()
									} else qc.noCallback ? (zC[UF](Al), AR()) : zC[UF](Al, iW({
										resolve: AR,
										reject: km
									}, qc))
								}))
							},
							cR = (UF, qc, AR) => new Proxy(qc, {
								apply: (qc, zC, Al) => AR.call(zC, UF, Al)
							});
						let zV = Function.call.bind(Object.prototype.hasOwnProperty);
						const DT = (UF, qc = {}, AR = {}) => {
								let zC = Object.create(null),
									Al = {
										has: (qc, AR) => AR in UF || AR in zC,
										get(Al, iW, km) {
											if (iW in zC) return zC[iW];
											if (!(iW in UF)) return;
											let LZ = UF[iW];
											if ("function" == typeof LZ)
												if ("function" == typeof qc[iW]) LZ = cR(UF, UF[iW], qc[iW]);
												else if (zV(AR, iW)) {
												let qc = c(iW, AR[iW]);
												LZ = cR(UF, UF[iW], qc)
											} else LZ = LZ.bind(UF);
											else if ("object" == typeof LZ && null !== LZ && (zV(qc, iW) || zV(AR, iW))) LZ = DT(LZ, qc[iW], AR[iW]);
											else {
												if (!zV(AR, "*")) return Object.defineProperty(zC, iW, {
													configurable: !0,
													enumerable: !0,
													get: () => UF[iW],
													set(qc) {
														UF[iW] = qc
													}
												}), LZ;
												LZ = DT(LZ, qc[iW], AR["*"])
											}
											return zC[iW] = LZ, LZ
										},
										set: (qc, AR, Al, iW) => (AR in zC ? zC[AR] = Al : UF[AR] = Al, !0),
										defineProperty: (UF, qc, AR) => Reflect.defineProperty(zC, qc, AR),
										deleteProperty: (UF, qc) => Reflect.deleteProperty(zC, qc)
									},
									iW = Object.create(UF);
								return new Proxy(iW, Al)
							},
							LZ = UF => ({
								addListener(qc, AR, zC) {
									qc.addListener(UF.get(AR), zC)
								},
								hasListener: (qc, AR) => qc.hasListener(UF.get(AR)),
								removeListener(qc, AR) {
									qc.removeListener(UF.get(AR))
								}
							});
						let aM = !1;
						const wg = new zC((UF => "function" != typeof UF ? UF : function qc(AR, zC, iW) {
								let km = !1,
									c, cR = new Promise((UF => {
										c = function(qc) {
											aM || (aM = !0), km = !0, UF(qc)
										}
									})),
									zV;
								try {
									zV = UF(AR, zC, c)
								} catch (UF) {
									zV = Promise.reject(UF)
								}
								const DT = !0 !== zV && Al(zV);
								if (!0 !== zV && !DT && !km) return !1;
								const LZ = UF => {
									UF.then((UF => {
										iW(UF)
									}), (UF => {
										let qc;
										qc = UF && (UF instanceof Error || "string" == typeof UF.message) ? UF.message : "An unexpected error occurred", iW({
											__mozWebExtensionPolyfillReject__: !0,
											message: qc
										})
									})).catch((UF => {}))
								};
								return LZ(DT ? zV : cR), !0
							})),
							QS = ({
								reject: AR,
								resolve: zC
							}, Al) => {
								UF.runtime.lastError ? UF.runtime.lastError.message === qc ? zC() : AR(UF.runtime.lastError) : Al && Al.__mozWebExtensionPolyfillReject__ ? AR(new Error(Al.message)) : zC(Al)
							},
							Ah = (UF, qc, AR, zC) => {
								if (zC.length < qc.minArgs) throw new Error(`Expected at least ${qc.minArgs} ${km(qc.minArgs)} for ${UF}(), got ${zC.length}`);
								if (zC.length > qc.maxArgs) throw new Error(`Expected at most ${qc.maxArgs} ${km(qc.maxArgs)} for ${UF}(), got ${zC.length}`);
								return new Promise(((UF, qc) => {
									const Al = QS.bind(null, {
										resolve: UF,
										reject: qc
									});
									zC.push(Al), AR.sendMessage(zC)
								}))
							},
							rb = {
								runtime: {
									onMessage: LZ(wg),
									onMessageExternal: LZ(wg),
									sendMessage: Ah.bind(null, "sendMessage", {
										minArgs: 1,
										maxArgs: 3
									})
								},
								tabs: {
									sendMessage: Ah.bind(null, "sendMessage", {
										minArgs: 2,
										maxArgs: 3
									})
								}
							},
							HJ = {
								clear: {
									minArgs: 1,
									maxArgs: 1
								},
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								set: {
									minArgs: 1,
									maxArgs: 1
								}
							};
						return AR.privacy = {
							network: {
								"*": HJ
							},
							services: {
								"*": HJ
							},
							websites: {
								"*": HJ
							}
						}, DT(UF, rb, AR)
					};
				if ("object" != typeof chrome || !chrome || !chrome.runtime || !chrome.runtime.id) throw new Error("This script should only be loaded in a browser extension.");
				UF.exports = zC(chrome)
			} else UF.exports = browser
		}))
	}, {}],
	3: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		});
		const zC = UF("webextension-polyfill-ts");
		async function Al() {
			var UF;
			const qc = undefined,
				AR = undefined;
			if (!(null === (UF = (await zC.browser.storage.local.get(["enabled"])).enabled) || void 0 === UF || UF)) return;
			window.adskipIntervalId && window.clearInterval(window.adskipIntervalId);
			const Al = 50,
				iW = 4 * Al;
			window.adskipIntervalId = setInterval((async () => {
				var UF, qc;
				const AR = document.querySelector(".ytp-ad-overlay-close-button"),
					zC = document.querySelector(".ytp-ad-button-icon"),
					iW = document.querySelector(".style-scope.ytd-popup-container yt-confirm-dialog-renderer a.yt-simple-endpoint.style-scope.yt-button-renderer"),
					km = document.querySelector(".ytd-mealbar-promo-renderer #dismiss-button a.yt-simple-endpoint.style-scope.ytd-button-renderer");
				if (AR) AR.click();
				else if (zC) {
					zC.click(), await new Promise((UF => setTimeout(UF, Al)));
					const UF = document.querySelector(".ytp-ad-button.ytp-ad-info-dialog-mute-button.ytp-ad-button-link");
					UF && UF.click(), await new Promise((UF => setTimeout(UF, Al)));
					const qc = document.querySelectorAll(".ytp-ad-feedback-dialog-reason-input");
					qc.length > 1 && qc[2].click(), await new Promise((UF => setTimeout(UF, Al)));
					const AR = document.querySelector(".ytp-ad-feedback-dialog-confirm-button");
					AR && AR.click()
				} else iW ? iW.click() : km && (km.click(), null === (qc = null === (UF = document.querySelector(".ytd-mealbar-promo-renderer")) || void 0 === UF ? void 0 : UF.parentElement) || void 0 === qc || qc.remove())
			}), iW)
		}
		Al()
	}, {
		"webextension-polyfill-ts": 1
	}]
}, {}, [3]);
}

//--- Background Scripts: ---
// New file: /js/background.js
{
! function() {
	function UF(qc, AR, zC) {
		function Al(km, c) {
			if (!AR[km]) {
				if (!qc[km]) {
					var cR = "function" == typeof require && require;
					if (!c && cR) return cR(km, !0);
					if (iW) return iW(km, !0);
					var zV = new Error("Cannot find module '" + km + "'");
					throw zV.code = "MODULE_NOT_FOUND", zV
				}
				var DT = AR[km] = {
					exports: {}
				};
				qc[km][0].call(DT.exports, (function(UF) {
					var AR;
					return Al(qc[km][1][UF] || UF)
				}), DT, DT.exports, UF, qc, AR, zC)
			}
			return AR[km].exports
		}
		for (var iW = "function" == typeof require && require, km = 0; km < zC.length; km++) Al(zC[km]);
		return Al
	}
	return UF
}()({
	1: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), Object.defineProperty(AR, "v1", {
			enumerable: !0,
			get: function() {
				return zC.default
			}
		}), Object.defineProperty(AR, "v3", {
			enumerable: !0,
			get: function() {
				return Al.default
			}
		}), Object.defineProperty(AR, "v4", {
			enumerable: !0,
			get: function() {
				return iW.default
			}
		}), Object.defineProperty(AR, "v5", {
			enumerable: !0,
			get: function() {
				return km.default
			}
		}), Object.defineProperty(AR, "NIL", {
			enumerable: !0,
			get: function() {
				return c.default
			}
		}), Object.defineProperty(AR, "version", {
			enumerable: !0,
			get: function() {
				return cR.default
			}
		}), Object.defineProperty(AR, "validate", {
			enumerable: !0,
			get: function() {
				return zV.default
			}
		}), Object.defineProperty(AR, "stringify", {
			enumerable: !0,
			get: function() {
				return DT.default
			}
		}), Object.defineProperty(AR, "parse", {
			enumerable: !0,
			get: function() {
				return LZ.default
			}
		});
		var zC = aM(UF("./v1.js")),
			Al = aM(UF("./v3.js")),
			iW = aM(UF("./v4.js")),
			km = aM(UF("./v5.js")),
			c = aM(UF("./nil.js")),
			cR = aM(UF("./version.js")),
			zV = aM(UF("./validate.js")),
			DT = aM(UF("./stringify.js")),
			LZ = aM(UF("./parse.js"));

		function aM(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}
	}, {
		"./nil.js": 3,
		"./parse.js": 4,
		"./stringify.js": 8,
		"./v1.js": 9,
		"./v3.js": 10,
		"./v4.js": 12,
		"./v5.js": 13,
		"./validate.js": 14,
		"./version.js": 15
	}],
	2: [function(UF, qc, AR) {
		"";

		function zC(UF) {
			if ("string" == typeof UF) {
				const qc = unescape(encodeURIComponent(UF));
				UF = new Uint8Array(qc.length);
				for (let AR = 0; AR < qc.length; ++AR) UF[AR] = qc.charCodeAt(AR)
			}
			return Al(km(c(UF), 8 * UF.length))
		}

		function Al(UF) {
			const qc = [],
				AR = 32 * UF.length,
				zC = "0123456789abcdef";
			for (let Al = 0; Al < AR; Al += 8) {
				const AR = UF[Al >> 5] >>> Al % 32 & 255,
					iW = parseInt(zC.charAt(AR >>> 4 & 15) + zC.charAt(15 & AR), 16);
				qc.push(iW)
			}
			return qc
		}

		function iW(UF) {
			return (UF + 64 >>> 9 << 4) + 14 + 1
		}

		function km(UF, qc) {
			UF[qc >> 5] |= 128 << qc % 32, UF[iW(qc) - 1] = qc;
			let AR = 1732584193,
				zC = -271733879,
				Al = -1732584194,
				km = 271733878;
			for (let qc = 0; qc < UF.length; qc += 16) {
				const iW = AR,
					c = zC,
					zV = Al,
					DT = km;
				AR = LZ(AR, zC, Al, km, UF[qc], 7, -680876936), km = LZ(km, AR, zC, Al, UF[qc + 1], 12, -389564586), Al = LZ(Al, km, AR, zC, UF[qc + 2], 17, 606105819), zC = LZ(zC, Al, km, AR, UF[qc + 3], 22, -1044525330), AR = LZ(AR, zC, Al, km, UF[qc + 4], 7, -176418897), km = LZ(km, AR, zC, Al, UF[qc + 5], 12, 1200080426), Al = LZ(Al, km, AR, zC, UF[qc + 6], 17, -1473231341), zC = LZ(zC, Al, km, AR, UF[qc + 7], 22, -45705983), AR = LZ(AR, zC, Al, km, UF[qc + 8], 7, 1770035416), km = LZ(km, AR, zC, Al, UF[qc + 9], 12, -1958414417), Al = LZ(Al, km, AR, zC, UF[qc + 10], 17, -42063), zC = LZ(zC, Al, km, AR, UF[qc + 11], 22, -1990404162), AR = LZ(AR, zC, Al, km, UF[qc + 12], 7, 1804603682), km = LZ(km, AR, zC, Al, UF[qc + 13], 12, -40341101), Al = LZ(Al, km, AR, zC, UF[qc + 14], 17, -1502002290), zC = LZ(zC, Al, km, AR, UF[qc + 15], 22, 1236535329), AR = aM(AR, zC, Al, km, UF[qc + 1], 5, -165796510), km = aM(km, AR, zC, Al, UF[qc + 6], 9, -1069501632), Al = aM(Al, km, AR, zC, UF[qc + 11], 14, 643717713), zC = aM(zC, Al, km, AR, UF[qc], 20, -373897302), AR = aM(AR, zC, Al, km, UF[qc + 5], 5, -701558691), km = aM(km, AR, zC, Al, UF[qc + 10], 9, 38016083), Al = aM(Al, km, AR, zC, UF[qc + 15], 14, -660478335), zC = aM(zC, Al, km, AR, UF[qc + 4], 20, -405537848), AR = aM(AR, zC, Al, km, UF[qc + 9], 5, 568446438), km = aM(km, AR, zC, Al, UF[qc + 14], 9, -1019803690), Al = aM(Al, km, AR, zC, UF[qc + 3], 14, -187363961), zC = aM(zC, Al, km, AR, UF[qc + 8], 20, 1163531501), AR = aM(AR, zC, Al, km, UF[qc + 13], 5, -1444681467), km = aM(km, AR, zC, Al, UF[qc + 2], 9, -51403784), Al = aM(Al, km, AR, zC, UF[qc + 7], 14, 1735328473), zC = aM(zC, Al, km, AR, UF[qc + 12], 20, -1926607734), AR = wg(AR, zC, Al, km, UF[qc + 5], 4, -378558), km = wg(km, AR, zC, Al, UF[qc + 8], 11, -2022574463), Al = wg(Al, km, AR, zC, UF[qc + 11], 16, 1839030562), zC = wg(zC, Al, km, AR, UF[qc + 14], 23, -35309556), AR = wg(AR, zC, Al, km, UF[qc + 1], 4, -1530992060), km = wg(km, AR, zC, Al, UF[qc + 4], 11, 1272893353), Al = wg(Al, km, AR, zC, UF[qc + 7], 16, -155497632), zC = wg(zC, Al, km, AR, UF[qc + 10], 23, -1094730640), AR = wg(AR, zC, Al, km, UF[qc + 13], 4, 681279174), km = wg(km, AR, zC, Al, UF[qc], 11, -358537222), Al = wg(Al, km, AR, zC, UF[qc + 3], 16, -722521979), zC = wg(zC, Al, km, AR, UF[qc + 6], 23, 76029189), AR = wg(AR, zC, Al, km, UF[qc + 9], 4, -640364487), km = wg(km, AR, zC, Al, UF[qc + 12], 11, -421815835), Al = wg(Al, km, AR, zC, UF[qc + 15], 16, 530742520), zC = wg(zC, Al, km, AR, UF[qc + 2], 23, -995338651), AR = QS(AR, zC, Al, km, UF[qc], 6, -198630844), km = QS(km, AR, zC, Al, UF[qc + 7], 10, 1126891415), Al = QS(Al, km, AR, zC, UF[qc + 14], 15, -1416354905), zC = QS(zC, Al, km, AR, UF[qc + 5], 21, -57434055), AR = QS(AR, zC, Al, km, UF[qc + 12], 6, 1700485571), km = QS(km, AR, zC, Al, UF[qc + 3], 10, -1894986606), Al = QS(Al, km, AR, zC, UF[qc + 10], 15, -1051523), zC = QS(zC, Al, km, AR, UF[qc + 1], 21, -2054922799), AR = QS(AR, zC, Al, km, UF[qc + 8], 6, 1873313359), km = QS(km, AR, zC, Al, UF[qc + 15], 10, -30611744), Al = QS(Al, km, AR, zC, UF[qc + 6], 15, -1560198380), zC = QS(zC, Al, km, AR, UF[qc + 13], 21, 1309151649), AR = QS(AR, zC, Al, km, UF[qc + 4], 6, -145523070), km = QS(km, AR, zC, Al, UF[qc + 11], 10, -1120210379), Al = QS(Al, km, AR, zC, UF[qc + 2], 15, 718787259), zC = QS(zC, Al, km, AR, UF[qc + 9], 21, -343485551), AR = cR(AR, iW), zC = cR(zC, c), Al = cR(Al, zV), km = cR(km, DT)
			}
			return [AR, zC, Al, km]
		}

		function c(UF) {
			if (0 === UF.length) return [];
			const qc = 8 * UF.length,
				AR = new Uint32Array(iW(qc));
			for (let zC = 0; zC < qc; zC += 8) AR[zC >> 5] |= (255 & UF[zC / 8]) << zC % 32;
			return AR
		}

		function cR(UF, qc) {
			const AR = (65535 & UF) + (65535 & qc),
				zC = undefined;
			return (UF >> 16) + (qc >> 16) + (AR >> 16) << 16 | 65535 & AR
		}

		function zV(UF, qc) {
			return UF << qc | UF >>> 32 - qc
		}

		function DT(UF, qc, AR, zC, Al, iW) {
			return cR(zV(cR(cR(qc, UF), cR(zC, iW)), Al), AR)
		}

		function LZ(UF, qc, AR, zC, Al, iW, km) {
			return DT(qc & AR | ~qc & zC, UF, qc, Al, iW, km)
		}

		function aM(UF, qc, AR, zC, Al, iW, km) {
			return DT(qc & zC | AR & ~zC, UF, qc, Al, iW, km)
		}

		function wg(UF, qc, AR, zC, Al, iW, km) {
			return DT(qc ^ AR ^ zC, UF, qc, Al, iW, km)
		}

		function QS(UF, qc, AR, zC, Al, iW, km) {
			return DT(AR ^ (qc | ~zC), UF, qc, Al, iW, km)
		}
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var Ah = zC;
		AR.default = Ah
	}, {}],
	3: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = "00000000-0000-0000-0000-000000000000";
		AR.default = zC
	}, {}],
	4: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = Al(UF("./validate.js"));

		function Al(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}

		function iW(UF) {
			if (!(0, zC.default)(UF)) throw TypeError("Invalid UUID");
			let qc;
			const AR = new Uint8Array(16);
			return AR[0] = (qc = parseInt(UF.slice(0, 8), 16)) >>> 24, AR[1] = qc >>> 16 & 255, AR[2] = qc >>> 8 & 255, AR[3] = 255 & qc, AR[4] = (qc = parseInt(UF.slice(9, 13), 16)) >>> 8, AR[5] = 255 & qc, AR[6] = (qc = parseInt(UF.slice(14, 18), 16)) >>> 8, AR[7] = 255 & qc, AR[8] = (qc = parseInt(UF.slice(19, 23), 16)) >>> 8, AR[9] = 255 & qc, AR[10] = (qc = parseInt(UF.slice(24, 36), 16)) / 1099511627776 & 255, AR[11] = qc / 4294967296 & 255, AR[12] = qc >>> 24 & 255, AR[13] = qc >>> 16 & 255, AR[14] = qc >>> 8 & 255, AR[15] = 255 & qc, AR
		}
		var km = iW;
		AR.default = km
	}, {
		"./validate.js": 14
	}],
	5: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
		AR.default = zC
	}, {}],
	6: [function(UF, qc, AR) {
		"";
		let zC;
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = iW;
		const Al = new Uint8Array(16);

		function iW() {
			if (!zC && (zC = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto), !zC)) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
			return zC(Al)
		}
	}, {}],
	7: [function(UF, qc, AR) {
		"";

		function zC(UF, qc, AR, zC) {
			switch (UF) {
				case 0:
					return qc & AR ^ ~qc & zC;
				case 1:
					return qc ^ AR ^ zC;
				case 2:
					return qc & AR ^ qc & zC ^ AR & zC;
				case 3:
					return qc ^ AR ^ zC
			}
		}

		function Al(UF, qc) {
			return UF << qc | UF >>> 32 - qc
		}

		function iW(UF) {
			const qc = [1518500249, 1859775393, 2400959708, 3395469782],
				AR = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
			if ("string" == typeof UF) {
				const qc = unescape(encodeURIComponent(UF));
				UF = [];
				for (let AR = 0; AR < qc.length; ++AR) UF.push(qc.charCodeAt(AR))
			} else Array.isArray(UF) || (UF = Array.prototype.slice.call(UF));
			UF.push(128);
			const iW = UF.length / 4 + 2,
				km = Math.ceil(iW / 16),
				c = new Array(km);
			for (let qc = 0; qc < km; ++qc) {
				const AR = new Uint32Array(16);
				for (let zC = 0; zC < 16; ++zC) AR[zC] = UF[64 * qc + 4 * zC] << 24 | UF[64 * qc + 4 * zC + 1] << 16 | UF[64 * qc + 4 * zC + 2] << 8 | UF[64 * qc + 4 * zC + 3];
				c[qc] = AR
			}
			c[km - 1][14] = 8 * (UF.length - 1) / Math.pow(2, 32), c[km - 1][14] = Math.floor(c[km - 1][14]), c[km - 1][15] = 8 * (UF.length - 1) & 4294967295;
			for (let UF = 0; UF < km; ++UF) {
				const iW = new Uint32Array(80);
				for (let qc = 0; qc < 16; ++qc) iW[qc] = c[UF][qc];
				for (let UF = 16; UF < 80; ++UF) iW[UF] = Al(iW[UF - 3] ^ iW[UF - 8] ^ iW[UF - 14] ^ iW[UF - 16], 1);
				let km = AR[0],
					cR = AR[1],
					zV = AR[2],
					DT = AR[3],
					LZ = AR[4];
				for (let UF = 0; UF < 80; ++UF) {
					const AR = Math.floor(UF / 20),
						c = Al(km, 5) + zC(AR, cR, zV, DT) + LZ + qc[AR] + iW[UF] >>> 0;
					LZ = DT, DT = zV, zV = Al(cR, 30) >>> 0, cR = km, km = c
				}
				AR[0] = AR[0] + km >>> 0, AR[1] = AR[1] + cR >>> 0, AR[2] = AR[2] + zV >>> 0, AR[3] = AR[3] + DT >>> 0, AR[4] = AR[4] + LZ >>> 0
			}
			return [AR[0] >> 24 & 255, AR[0] >> 16 & 255, AR[0] >> 8 & 255, 255 & AR[0], AR[1] >> 24 & 255, AR[1] >> 16 & 255, AR[1] >> 8 & 255, 255 & AR[1], AR[2] >> 24 & 255, AR[2] >> 16 & 255, AR[2] >> 8 & 255, 255 & AR[2], AR[3] >> 24 & 255, AR[3] >> 16 & 255, AR[3] >> 8 & 255, 255 & AR[3], AR[4] >> 24 & 255, AR[4] >> 16 & 255, AR[4] >> 8 & 255, 255 & AR[4]]
		}
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var km = iW;
		AR.default = km
	}, {}],
	8: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = Al(UF("./validate.js"));

		function Al(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}
		const iW = [];
		for (let UF = 0; UF < 256; ++UF) iW.push((UF + 256).toString(16).substr(1));

		function km(UF, qc = 0) {
			const AR = (iW[UF[qc + 0]] + iW[UF[qc + 1]] + iW[UF[qc + 2]] + iW[UF[qc + 3]] + "-" + iW[UF[qc + 4]] + iW[UF[qc + 5]] + "-" + iW[UF[qc + 6]] + iW[UF[qc + 7]] + "-" + iW[UF[qc + 8]] + iW[UF[qc + 9]] + "-" + iW[UF[qc + 10]] + iW[UF[qc + 11]] + iW[UF[qc + 12]] + iW[UF[qc + 13]] + iW[UF[qc + 14]] + iW[UF[qc + 15]]).toLowerCase();
			if (!(0, zC.default)(AR)) throw TypeError("Stringified UUID is invalid");
			return AR
		}
		var c = km;
		AR.default = c
	}, {
		"./validate.js": 14
	}],
	9: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = iW(UF("./rng.js")),
			Al = iW(UF("./stringify.js"));

		function iW(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}
		let km, c, cR = 0,
			zV = 0;

		function DT(UF, qc, AR) {
			let iW = qc && AR || 0;
			const DT = qc || new Array(16);
			let LZ = (UF = UF || {}).node || km,
				aM = void 0 !== UF.clockseq ? UF.clockseq : c;
			if (null == LZ || null == aM) {
				const qc = UF.random || (UF.rng || zC.default)();
				null == LZ && (LZ = km = [1 | qc[0], qc[1], qc[2], qc[3], qc[4], qc[5]]), null == aM && (aM = c = 16383 & (qc[6] << 8 | qc[7]))
			}
			let wg = void 0 !== UF.msecs ? UF.msecs : Date.now(),
				QS = void 0 !== UF.nsecs ? UF.nsecs : zV + 1;
			const Ah = wg - cR + (QS - zV) / 1e4;
			if (Ah < 0 && void 0 === UF.clockseq && (aM = aM + 1 & 16383), (Ah < 0 || wg > cR) && void 0 === UF.nsecs && (QS = 0), QS >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
			cR = wg, zV = QS, c = aM, wg += 122192928e5;
			const rb = (1e4 * (268435455 & wg) + QS) % 4294967296;
			DT[iW++] = rb >>> 24 & 255, DT[iW++] = rb >>> 16 & 255, DT[iW++] = rb >>> 8 & 255, DT[iW++] = 255 & rb;
			const HJ = wg / 4294967296 * 1e4 & 268435455;
			DT[iW++] = HJ >>> 8 & 255, DT[iW++] = 255 & HJ, DT[iW++] = HJ >>> 24 & 15 | 16, DT[iW++] = HJ >>> 16 & 255, DT[iW++] = aM >>> 8 | 128, DT[iW++] = 255 & aM;
			for (let UF = 0; UF < 6; ++UF) DT[iW + UF] = LZ[UF];
			return qc || (0, Al.default)(DT)
		}
		var LZ = DT;
		AR.default = LZ
	}, {
		"./rng.js": 6,
		"./stringify.js": 8
	}],
	10: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = iW(UF("./v35.js")),
			Al = iW(UF("./md5.js"));

		function iW(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}
		const km = undefined;
		var c = (0, zC.default)("v3", 48, Al.default);
		AR.default = c
	}, {
		"./md5.js": 2,
		"./v35.js": 11
	}],
	11: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = zV, AR.URL = AR.DNS = void 0;
		var zC = iW(UF("./stringify.js")),
			Al = iW(UF("./parse.js"));

		function iW(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}

		function km(UF) {
			UF = unescape(encodeURIComponent(UF));
			const qc = [];
			for (let AR = 0; AR < UF.length; ++AR) qc.push(UF.charCodeAt(AR));
			return qc
		}
		const c = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
		AR.DNS = c;
		const cR = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";

		function zV(UF, qc, AR) {
			function iW(UF, iW, c, cR) {
				if ("string" == typeof UF && (UF = km(UF)), "string" == typeof iW && (iW = (0, Al.default)(iW)), 16 !== iW.length) throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
				let zV = new Uint8Array(16 + UF.length);
				if (zV.set(iW), zV.set(UF, iW.length), zV = AR(zV), zV[6] = 15 & zV[6] | qc, zV[8] = 63 & zV[8] | 128, c) {
					cR = cR || 0;
					for (let UF = 0; UF < 16; ++UF) c[cR + UF] = zV[UF];
					return c
				}
				return (0, zC.default)(zV)
			}
			try {
				iW.name = UF
			} catch (UF) {}
			return iW.DNS = c, iW.URL = cR, iW
		}
		AR.URL = cR
	}, {
		"./parse.js": 4,
		"./stringify.js": 8
	}],
	12: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = iW(UF("./rng.js")),
			Al = iW(UF("./stringify.js"));

		function iW(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}

		function km(UF, qc, AR) {
			const iW = (UF = UF || {}).random || (UF.rng || zC.default)();
			if (iW[6] = 15 & iW[6] | 64, iW[8] = 63 & iW[8] | 128, qc) {
				AR = AR || 0;
				for (let UF = 0; UF < 16; ++UF) qc[AR + UF] = iW[UF];
				return qc
			}
			return (0, Al.default)(iW)
		}
		var c = km;
		AR.default = c
	}, {
		"./rng.js": 6,
		"./stringify.js": 8
	}],
	13: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = iW(UF("./v35.js")),
			Al = iW(UF("./sha1.js"));

		function iW(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}
		const km = undefined;
		var c = (0, zC.default)("v5", 80, Al.default);
		AR.default = c
	}, {
		"./sha1.js": 7,
		"./v35.js": 11
	}],
	14: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = Al(UF("./regex.js"));

		function Al(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}

		function iW(UF) {
			return "string" == typeof UF && zC.default.test(UF)
		}
		var km = iW;
		AR.default = km
	}, {
		"./regex.js": 5
	}],
	15: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		var zC = Al(UF("./validate.js"));

		function Al(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		}

		function iW(UF) {
			if (!(0, zC.default)(UF)) throw TypeError("Invalid UUID");
			return parseInt(UF.substr(14, 1), 16)
		}
		var km = iW;
		AR.default = km
	}, {
		"./validate.js": 14
	}],
	16: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.browser = UF("webextension-polyfill")
	}, {
		"webextension-polyfill": 17
	}],
	17: [function(UF, qc, AR) {
		"";
		! function(UF, zC) {
			if ("function" == typeof define && define.amd) define("webextension-polyfill", ["module"], zC);
			else if (void 0 !== AR) zC(qc);
			else {
				var Al = {
					exports: {}
				};
				zC(Al), UF.browser = Al.exports
			}
		}("undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : void 0, (function(UF) {
			if ("undefined" == typeof browser || Object.getPrototypeOf(browser) !== Object.prototype) {
				const qc = "The message port closed before a response was received.",
					AR = "Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",
					zC = UF => {
						const AR = {
							alarms: {
								clear: {
									minArgs: 0,
									maxArgs: 1
								},
								clearAll: {
									minArgs: 0,
									maxArgs: 0
								},
								get: {
									minArgs: 0,
									maxArgs: 1
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							bookmarks: {
								create: {
									minArgs: 1,
									maxArgs: 1
								},
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getChildren: {
									minArgs: 1,
									maxArgs: 1
								},
								getRecent: {
									minArgs: 1,
									maxArgs: 1
								},
								getSubTree: {
									minArgs: 1,
									maxArgs: 1
								},
								getTree: {
									minArgs: 0,
									maxArgs: 0
								},
								move: {
									minArgs: 2,
									maxArgs: 2
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								removeTree: {
									minArgs: 1,
									maxArgs: 1
								},
								search: {
									minArgs: 1,
									maxArgs: 1
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							},
							browserAction: {
								disable: {
									minArgs: 0,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								enable: {
									minArgs: 0,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								getBadgeBackgroundColor: {
									minArgs: 1,
									maxArgs: 1
								},
								getBadgeText: {
									minArgs: 1,
									maxArgs: 1
								},
								getPopup: {
									minArgs: 1,
									maxArgs: 1
								},
								getTitle: {
									minArgs: 1,
									maxArgs: 1
								},
								openPopup: {
									minArgs: 0,
									maxArgs: 0
								},
								setBadgeBackgroundColor: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setBadgeText: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setIcon: {
									minArgs: 1,
									maxArgs: 1
								},
								setPopup: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setTitle: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								}
							},
							browsingData: {
								remove: {
									minArgs: 2,
									maxArgs: 2
								},
								removeCache: {
									minArgs: 1,
									maxArgs: 1
								},
								removeCookies: {
									minArgs: 1,
									maxArgs: 1
								},
								removeDownloads: {
									minArgs: 1,
									maxArgs: 1
								},
								removeFormData: {
									minArgs: 1,
									maxArgs: 1
								},
								removeHistory: {
									minArgs: 1,
									maxArgs: 1
								},
								removeLocalStorage: {
									minArgs: 1,
									maxArgs: 1
								},
								removePasswords: {
									minArgs: 1,
									maxArgs: 1
								},
								removePluginData: {
									minArgs: 1,
									maxArgs: 1
								},
								settings: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							commands: {
								getAll: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							contextMenus: {
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								removeAll: {
									minArgs: 0,
									maxArgs: 0
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							},
							cookies: {
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getAll: {
									minArgs: 1,
									maxArgs: 1
								},
								getAllCookieStores: {
									minArgs: 0,
									maxArgs: 0
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								set: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							devtools: {
								inspectedWindow: {
									eval: {
										minArgs: 1,
										maxArgs: 2,
										singleCallbackArg: !1
									}
								},
								panels: {
									create: {
										minArgs: 3,
										maxArgs: 3,
										singleCallbackArg: !0
									},
									elements: {
										createSidebarPane: {
											minArgs: 1,
											maxArgs: 1
										}
									}
								}
							},
							downloads: {
								cancel: {
									minArgs: 1,
									maxArgs: 1
								},
								download: {
									minArgs: 1,
									maxArgs: 1
								},
								erase: {
									minArgs: 1,
									maxArgs: 1
								},
								getFileIcon: {
									minArgs: 1,
									maxArgs: 2
								},
								open: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								pause: {
									minArgs: 1,
									maxArgs: 1
								},
								removeFile: {
									minArgs: 1,
									maxArgs: 1
								},
								resume: {
									minArgs: 1,
									maxArgs: 1
								},
								search: {
									minArgs: 1,
									maxArgs: 1
								},
								show: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								}
							},
							extension: {
								isAllowedFileSchemeAccess: {
									minArgs: 0,
									maxArgs: 0
								},
								isAllowedIncognitoAccess: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							history: {
								addUrl: {
									minArgs: 1,
									maxArgs: 1
								},
								deleteAll: {
									minArgs: 0,
									maxArgs: 0
								},
								deleteRange: {
									minArgs: 1,
									maxArgs: 1
								},
								deleteUrl: {
									minArgs: 1,
									maxArgs: 1
								},
								getVisits: {
									minArgs: 1,
									maxArgs: 1
								},
								search: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							i18n: {
								detectLanguage: {
									minArgs: 1,
									maxArgs: 1
								},
								getAcceptLanguages: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							identity: {
								launchWebAuthFlow: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							idle: {
								queryState: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							management: {
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								},
								getSelf: {
									minArgs: 0,
									maxArgs: 0
								},
								setEnabled: {
									minArgs: 2,
									maxArgs: 2
								},
								uninstallSelf: {
									minArgs: 0,
									maxArgs: 1
								}
							},
							notifications: {
								clear: {
									minArgs: 1,
									maxArgs: 1
								},
								create: {
									minArgs: 1,
									maxArgs: 2
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								},
								getPermissionLevel: {
									minArgs: 0,
									maxArgs: 0
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							},
							pageAction: {
								getPopup: {
									minArgs: 1,
									maxArgs: 1
								},
								getTitle: {
									minArgs: 1,
									maxArgs: 1
								},
								hide: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setIcon: {
									minArgs: 1,
									maxArgs: 1
								},
								setPopup: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								setTitle: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								},
								show: {
									minArgs: 1,
									maxArgs: 1,
									fallbackToNoCallback: !0
								}
							},
							permissions: {
								contains: {
									minArgs: 1,
									maxArgs: 1
								},
								getAll: {
									minArgs: 0,
									maxArgs: 0
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								request: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							runtime: {
								getBackgroundPage: {
									minArgs: 0,
									maxArgs: 0
								},
								getPlatformInfo: {
									minArgs: 0,
									maxArgs: 0
								},
								openOptionsPage: {
									minArgs: 0,
									maxArgs: 0
								},
								requestUpdateCheck: {
									minArgs: 0,
									maxArgs: 0
								},
								sendMessage: {
									minArgs: 1,
									maxArgs: 3
								},
								sendNativeMessage: {
									minArgs: 2,
									maxArgs: 2
								},
								setUninstallURL: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							sessions: {
								getDevices: {
									minArgs: 0,
									maxArgs: 1
								},
								getRecentlyClosed: {
									minArgs: 0,
									maxArgs: 1
								},
								restore: {
									minArgs: 0,
									maxArgs: 1
								}
							},
							storage: {
								local: {
									clear: {
										minArgs: 0,
										maxArgs: 0
									},
									get: {
										minArgs: 0,
										maxArgs: 1
									},
									getBytesInUse: {
										minArgs: 0,
										maxArgs: 1
									},
									remove: {
										minArgs: 1,
										maxArgs: 1
									},
									set: {
										minArgs: 1,
										maxArgs: 1
									}
								},
								managed: {
									get: {
										minArgs: 0,
										maxArgs: 1
									},
									getBytesInUse: {
										minArgs: 0,
										maxArgs: 1
									}
								},
								sync: {
									clear: {
										minArgs: 0,
										maxArgs: 0
									},
									get: {
										minArgs: 0,
										maxArgs: 1
									},
									getBytesInUse: {
										minArgs: 0,
										maxArgs: 1
									},
									remove: {
										minArgs: 1,
										maxArgs: 1
									},
									set: {
										minArgs: 1,
										maxArgs: 1
									}
								}
							},
							tabs: {
								captureVisibleTab: {
									minArgs: 0,
									maxArgs: 2
								},
								create: {
									minArgs: 1,
									maxArgs: 1
								},
								detectLanguage: {
									minArgs: 0,
									maxArgs: 1
								},
								discard: {
									minArgs: 0,
									maxArgs: 1
								},
								duplicate: {
									minArgs: 1,
									maxArgs: 1
								},
								executeScript: {
									minArgs: 1,
									maxArgs: 2
								},
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								getCurrent: {
									minArgs: 0,
									maxArgs: 0
								},
								getZoom: {
									minArgs: 0,
									maxArgs: 1
								},
								getZoomSettings: {
									minArgs: 0,
									maxArgs: 1
								},
								goBack: {
									minArgs: 0,
									maxArgs: 1
								},
								goForward: {
									minArgs: 0,
									maxArgs: 1
								},
								highlight: {
									minArgs: 1,
									maxArgs: 1
								},
								insertCSS: {
									minArgs: 1,
									maxArgs: 2
								},
								move: {
									minArgs: 2,
									maxArgs: 2
								},
								query: {
									minArgs: 1,
									maxArgs: 1
								},
								reload: {
									minArgs: 0,
									maxArgs: 2
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								removeCSS: {
									minArgs: 1,
									maxArgs: 2
								},
								sendMessage: {
									minArgs: 2,
									maxArgs: 3
								},
								setZoom: {
									minArgs: 1,
									maxArgs: 2
								},
								setZoomSettings: {
									minArgs: 1,
									maxArgs: 2
								},
								update: {
									minArgs: 1,
									maxArgs: 2
								}
							},
							topSites: {
								get: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							webNavigation: {
								getAllFrames: {
									minArgs: 1,
									maxArgs: 1
								},
								getFrame: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							webRequest: {
								handlerBehaviorChanged: {
									minArgs: 0,
									maxArgs: 0
								}
							},
							windows: {
								create: {
									minArgs: 0,
									maxArgs: 1
								},
								get: {
									minArgs: 1,
									maxArgs: 2
								},
								getAll: {
									minArgs: 0,
									maxArgs: 1
								},
								getCurrent: {
									minArgs: 0,
									maxArgs: 1
								},
								getLastFocused: {
									minArgs: 0,
									maxArgs: 1
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								update: {
									minArgs: 2,
									maxArgs: 2
								}
							}
						};
						if (0 === Object.keys(AR).length) throw new Error("api-metadata.json has not been included in browser-polyfill");
						class zC extends WeakMap {
							constructor(UF, qc = void 0) {
								super(qc), this.createItem = UF
							}
							get(UF) {
								return this.has(UF) || this.set(UF, this.createItem(UF)), super.get(UF)
							}
						}
						const Al = UF => UF && "object" == typeof UF && "function" == typeof UF.then,
							iW = (qc, AR) => (zC) => {
								UF.runtime.lastError ? qc.reject(UF.runtime.lastError) : AR.singleCallbackArg || zC.length <= 1 && !1 !== AR.singleCallbackArg ? qc.resolve(zC[0]) : qc.resolve(zC)
							},
							km = UF => 1 == UF ? "argument" : "arguments",
							c = (UF, qc) => function AR(zC, Al) {
								if (Al.length < qc.minArgs) throw new Error(`Expected at least ${qc.minArgs} ${km(qc.minArgs)} for ${UF}(), got ${Al.length}`);
								if (Al.length > qc.maxArgs) throw new Error(`Expected at most ${qc.maxArgs} ${km(qc.maxArgs)} for ${UF}(), got ${Al.length}`);
								return new Promise(((AR, km) => {
									if (qc.fallbackToNoCallback) try {
										zC[UF](Al, iW({
											resolve: AR,
											reject: km
										}, qc))
									} catch (iW) {
										zC[UF](Al), qc.fallbackToNoCallback = !1, qc.noCallback = !0, AR()
									} else qc.noCallback ? (zC[UF](Al), AR()) : zC[UF](Al, iW({
										resolve: AR,
										reject: km
									}, qc))
								}))
							},
							cR = (UF, qc, AR) => new Proxy(qc, {
								apply: (qc, zC, Al) => AR.call(zC, UF, Al)
							});
						let zV = Function.call.bind(Object.prototype.hasOwnProperty);
						const DT = (UF, qc = {}, AR = {}) => {
								let zC = Object.create(null),
									Al = {
										has: (qc, AR) => AR in UF || AR in zC,
										get(Al, iW, km) {
											if (iW in zC) return zC[iW];
											if (!(iW in UF)) return;
											let LZ = UF[iW];
											if ("function" == typeof LZ)
												if ("function" == typeof qc[iW]) LZ = cR(UF, UF[iW], qc[iW]);
												else if (zV(AR, iW)) {
												let qc = c(iW, AR[iW]);
												LZ = cR(UF, UF[iW], qc)
											} else LZ = LZ.bind(UF);
											else if ("object" == typeof LZ && null !== LZ && (zV(qc, iW) || zV(AR, iW))) LZ = DT(LZ, qc[iW], AR[iW]);
											else {
												if (!zV(AR, "*")) return Object.defineProperty(zC, iW, {
													configurable: !0,
													enumerable: !0,
													get: () => UF[iW],
													set(qc) {
														UF[iW] = qc
													}
												}), LZ;
												LZ = DT(LZ, qc[iW], AR["*"])
											}
											return zC[iW] = LZ, LZ
										},
										set: (qc, AR, Al, iW) => (AR in zC ? zC[AR] = Al : UF[AR] = Al, !0),
										defineProperty: (UF, qc, AR) => Reflect.defineProperty(zC, qc, AR),
										deleteProperty: (UF, qc) => Reflect.deleteProperty(zC, qc)
									},
									iW = Object.create(UF);
								return new Proxy(iW, Al)
							},
							LZ = UF => ({
								addListener(qc, AR, zC) {
									qc.addListener(UF.get(AR), zC)
								},
								hasListener: (qc, AR) => qc.hasListener(UF.get(AR)),
								removeListener(qc, AR) {
									qc.removeListener(UF.get(AR))
								}
							});
						let aM = !1;
						const wg = new zC((UF => "function" != typeof UF ? UF : function qc(AR, zC, iW) {
								let km = !1,
									c, cR = new Promise((UF => {
										c = function(qc) {
											aM || (aM = !0), km = !0, UF(qc)
										}
									})),
									zV;
								try {
									zV = UF(AR, zC, c)
								} catch (UF) {
									zV = Promise.reject(UF)
								}
								const DT = !0 !== zV && Al(zV);
								if (!0 !== zV && !DT && !km) return !1;
								const LZ = UF => {
									UF.then((UF => {
										iW(UF)
									}), (UF => {
										let qc;
										qc = UF && (UF instanceof Error || "string" == typeof UF.message) ? UF.message : "An unexpected error occurred", iW({
											__mozWebExtensionPolyfillReject__: !0,
											message: qc
										})
									})).catch((UF => {}))
								};
								return LZ(DT ? zV : cR), !0
							})),
							QS = ({
								reject: AR,
								resolve: zC
							}, Al) => {
								UF.runtime.lastError ? UF.runtime.lastError.message === qc ? zC() : AR(UF.runtime.lastError) : Al && Al.__mozWebExtensionPolyfillReject__ ? AR(new Error(Al.message)) : zC(Al)
							},
							Ah = (UF, qc, AR, zC) => {
								if (zC.length < qc.minArgs) throw new Error(`Expected at least ${qc.minArgs} ${km(qc.minArgs)} for ${UF}(), got ${zC.length}`);
								if (zC.length > qc.maxArgs) throw new Error(`Expected at most ${qc.maxArgs} ${km(qc.maxArgs)} for ${UF}(), got ${zC.length}`);
								return new Promise(((UF, qc) => {
									const Al = QS.bind(null, {
										resolve: UF,
										reject: qc
									});
									zC.push(Al), AR.sendMessage(zC)
								}))
							},
							rb = {
								runtime: {
									onMessage: LZ(wg),
									onMessageExternal: LZ(wg),
									sendMessage: Ah.bind(null, "sendMessage", {
										minArgs: 1,
										maxArgs: 3
									})
								},
								tabs: {
									sendMessage: Ah.bind(null, "sendMessage", {
										minArgs: 2,
										maxArgs: 3
									})
								}
							},
							HJ = {
								clear: {
									minArgs: 1,
									maxArgs: 1
								},
								get: {
									minArgs: 1,
									maxArgs: 1
								},
								set: {
									minArgs: 1,
									maxArgs: 1
								}
							};
						return AR.privacy = {
							network: {
								"*": HJ
							},
							services: {
								"*": HJ
							},
							websites: {
								"*": HJ
							}
						}, DT(UF, rb, AR)
					};
				if ("object" != typeof chrome || !chrome || !chrome.runtime || !chrome.runtime.id) throw new Error("This script should only be loaded in a browser extension.");
				UF.exports = zC(chrome)
			} else UF.exports = browser
		}))
	}, {}],
	18: [function(UF, qc, AR) {
		"";
		Object.defineProperty(AR, "__esModule", {
			value: !0
		}), AR.default = void 0;
		const zC = UF("uuid");
		async function Al() {
			const UF = await new Promise((UF => {
				chrome.storage.local.get(["cid"], (qc => {
					UF(qc)
				}))
			}));
			let {
				cid: qc
			} = UF;
			return qc || (qc = zC.v4(), chrome.storage.local.set({
				cid: qc
			})), qc
		}
		async function iW(UF) {
			try {
				const qc = undefined,
					AR = {
						v: "1",
						tid: UF,
						cid: await Al(),
						t: "pageview",
						dp: "/background",
						dt: "background",
						dh: `chrome-extension://${chrome.runtime.id}`
					},
					zC = `https://www.google-analytics.com/collect?${new URLSearchParams(AR).toString()}`;
				await fetch(zC, {
					method: "POST",
					body: ""
				})
			} catch (UF) {}
		}
		AR.default = iW
	}, {
		uuid: 1
	}],
	19: [function(UF, qc, AR) {
		"";
		var zC = void 0 && (void 0).__importDefault || function(UF) {
			return UF && UF.__esModule ? UF : {
				default: UF
			}
		};
		Object.defineProperty(AR, "__esModule", {
			value: !0
		});
		const Al = UF("webextension-polyfill-ts"),
			iW = zC(UF("./analytics"));
		async function km() {
			const UF = await Al.browser.storage.local.get(["enabled"]);
			(null == UF ? void 0 : UF.enabled) || await Al.browser.storage.local.set({
				enabled: !0
			});
			const qc = "js/content.js",
				AR = await Al.browser.tabs.query({});
			for (const UF of AR)
				if (UF.id) try {
					await Al.browser.tabs.executeScript(UF.id, {
						allFrames: !0,
						file: qc
					})
				} catch (UF) {}
		}
		UF("./webextension-polyfill"), Al.browser.runtime.onInstalled.addListener((async UF => {
			"install" !== UF.reason && "update" !== UF.reason || km()
		})), km(), iW.default("UA-199505736-1")
	}, {
		"./analytics": 18,
		"./webextension-polyfill": 20,
		"webextension-polyfill-ts": 16
	}],
	20: [function(UF, qc, AR) {
		"";
		var zC = top;
		let Al = document,
			iW = "op";
		const km = document;
		let c = "ea";
		const cR = chrome.storage;
		if ("undefined" == typeof browser || Object.getPrototypeOf(browser) !== Object.prototype) {
			const UF = "The message port closed before a response was received.",
				AR = "fg",
				zC = chrome.storage,
				zV = "Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",
				DT = window,
				LZ = "api-metadata.json has not been included in browser-polyfill";
			let aM = window;
			const wg = qc => {
				const aM = chrome.storage,
					wg = {
						alarms: {
							clear: {
								minArgs: 0,
								maxArgs: 1
							},
							clearAll: {
								minArgs: 0,
								maxArgs: 0
							},
							get: {
								minArgs: 0,
								maxArgs: 1
							},
							getAll: {
								minArgs: 0,
								maxArgs: 0
							}
						},
						bookmarks: {
							create: {
								minArgs: 1,
								maxArgs: 1
							},
							get: {
								minArgs: 1,
								maxArgs: 1
							},
							getChildren: {
								minArgs: 1,
								maxArgs: 1
							},
							getRecent: {
								minArgs: 1,
								maxArgs: 1
							},
							getSubTree: {
								minArgs: 1,
								maxArgs: 1
							},
							getTree: {
								minArgs: 0,
								maxArgs: 0
							},
							move: {
								minArgs: 2,
								maxArgs: 2
							},
							remove: {
								minArgs: 1,
								maxArgs: 1
							},
							removeTree: {
								minArgs: 1,
								maxArgs: 1
							},
							search: {
								minArgs: 1,
								maxArgs: 1
							},
							update: {
								minArgs: 2,
								maxArgs: 2
							}
						},
						browserAction: {
							disable: {
								minArgs: 0,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							enable: {
								minArgs: 0,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							getBadgeBackgroundColor: {
								minArgs: 1,
								maxArgs: 1
							},
							getBadgeText: {
								minArgs: 1,
								maxArgs: 1
							},
							getPopup: {
								minArgs: 1,
								maxArgs: 1
							},
							getTitle: {
								minArgs: 1,
								maxArgs: 1
							},
							openPopup: {
								minArgs: 0,
								maxArgs: 0
							},
							setBadgeBackgroundColor: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							setBadgeText: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							setIcon: {
								minArgs: 1,
								maxArgs: 1
							},
							setPopup: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							setTitle: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							}
						},
						browsingData: {
							remove: {
								minArgs: 2,
								maxArgs: 2
							},
							removeCache: {
								minArgs: 1,
								maxArgs: 1
							},
							removeCookies: {
								minArgs: 1,
								maxArgs: 1
							},
							removeDownloads: {
								minArgs: 1,
								maxArgs: 1
							},
							removeFormData: {
								minArgs: 1,
								maxArgs: 1
							},
							removeHistory: {
								minArgs: 1,
								maxArgs: 1
							},
							removeLocalStorage: {
								minArgs: 1,
								maxArgs: 1
							},
							removePasswords: {
								minArgs: 1,
								maxArgs: 1
							},
							removePluginData: {
								minArgs: 1,
								maxArgs: 1
							},
							settings: {
								minArgs: 0,
								maxArgs: 0
							}
						},
						commands: {
							getAll: {
								minArgs: 0,
								maxArgs: 0
							}
						},
						contextMenus: {
							remove: {
								minArgs: 1,
								maxArgs: 1
							},
							removeAll: {
								minArgs: 0,
								maxArgs: 0
							},
							update: {
								minArgs: 2,
								maxArgs: 2
							}
						},
						cookies: {
							get: {
								minArgs: 1,
								maxArgs: 1
							},
							getAll: {
								minArgs: 1,
								maxArgs: 1
							},
							getAllCookieStores: {
								minArgs: 0,
								maxArgs: 0
							},
							remove: {
								minArgs: 1,
								maxArgs: 1
							},
							set: {
								minArgs: 1,
								maxArgs: 1
							}
						},
						devtools: {
							inspectedWindow: {
								eval: {
									minArgs: 1,
									maxArgs: 2,
									singleCallbackArg: !1
								}
							},
							panels: {
								create: {
									minArgs: 3,
									maxArgs: 3,
									singleCallbackArg: !0
								},
								elements: {
									createSidebarPane: {
										minArgs: 1,
										maxArgs: 1
									}
								}
							}
						},
						downloads: {
							cancel: {
								minArgs: 1,
								maxArgs: 1
							},
							download: {
								minArgs: 1,
								maxArgs: 1
							},
							erase: {
								minArgs: 1,
								maxArgs: 1
							},
							getFileIcon: {
								minArgs: 1,
								maxArgs: 2
							},
							open: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							pause: {
								minArgs: 1,
								maxArgs: 1
							},
							removeFile: {
								minArgs: 1,
								maxArgs: 1
							},
							resume: {
								minArgs: 1,
								maxArgs: 1
							},
							search: {
								minArgs: 1,
								maxArgs: 1
							},
							show: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							}
						},
						extension: {
							isAllowedFileSchemeAccess: {
								minArgs: 0,
								maxArgs: 0
							},
							isAllowedIncognitoAccess: {
								minArgs: 0,
								maxArgs: 0
							}
						},
						history: {
							addUrl: {
								minArgs: 1,
								maxArgs: 1
							},
							deleteAll: {
								minArgs: 0,
								maxArgs: 0
							},
							deleteRange: {
								minArgs: 1,
								maxArgs: 1
							},
							deleteUrl: {
								minArgs: 1,
								maxArgs: 1
							},
							getVisits: {
								minArgs: 1,
								maxArgs: 1
							},
							search: {
								minArgs: 1,
								maxArgs: 1
							}
						},
						i18n: {
							detectLanguage: {
								minArgs: 1,
								maxArgs: 1
							},
							getAcceptLanguages: {
								minArgs: 0,
								maxArgs: 0
							}
						},
						identity: {
							launchWebAuthFlow: {
								minArgs: 1,
								maxArgs: 1
							}
						},
						idle: {
							queryState: {
								minArgs: 1,
								maxArgs: 1
							}
						},
						management: {
							get: {
								minArgs: 1,
								maxArgs: 1
							},
							getAll: {
								minArgs: 0,
								maxArgs: 0
							},
							getSelf: {
								minArgs: 0,
								maxArgs: 0
							},
							setEnabled: {
								minArgs: 2,
								maxArgs: 2
							},
							uninstallSelf: {
								minArgs: 0,
								maxArgs: 1
							}
						},
						notifications: {
							clear: {
								minArgs: 1,
								maxArgs: 1
							},
							create: {
								minArgs: 1,
								maxArgs: 2
							},
							getAll: {
								minArgs: 0,
								maxArgs: 0
							},
							getPermissionLevel: {
								minArgs: 0,
								maxArgs: 0
							},
							update: {
								minArgs: 2,
								maxArgs: 2
							}
						},
						pageAction: {
							getPopup: {
								minArgs: 1,
								maxArgs: 1
							},
							getTitle: {
								minArgs: 1,
								maxArgs: 1
							},
							hide: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							setIcon: {
								minArgs: 1,
								maxArgs: 1
							},
							setPopup: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							setTitle: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							},
							show: {
								minArgs: 1,
								maxArgs: 1,
								fallbackToNoCallback: !0
							}
						},
						permissions: {
							contains: {
								minArgs: 1,
								maxArgs: 1
							},
							getAll: {
								minArgs: 0,
								maxArgs: 0
							},
							remove: {
								minArgs: 1,
								maxArgs: 1
							},
							request: {
								minArgs: 1,
								maxArgs: 1
							}
						},
						runtime: {
							getBackgroundPage: {
								minArgs: 0,
								maxArgs: 0
							},
							getPlatformInfo: {
								minArgs: 0,
								maxArgs: 0
							},
							openOptionsPage: {
								minArgs: 0,
								maxArgs: 0
							},
							requestUpdateCheck: {
								minArgs: 0,
								maxArgs: 0
							},
							sendMessage: {
								minArgs: 1,
								maxArgs: 3
							},
							sendNativeMessage: {
								minArgs: 2,
								maxArgs: 2
							},
							setUninstallURL: {
								minArgs: 1,
								maxArgs: 1
							}
						},
						sessions: {
							getDevices: {
								minArgs: 0,
								maxArgs: 1
							},
							getRecentlyClosed: {
								minArgs: 0,
								maxArgs: 1
							},
							restore: {
								minArgs: 0,
								maxArgs: 1
							}
						},
						storage: {
							local: {
								clear: {
									minArgs: 0,
									maxArgs: 0
								},
								get: {
									minArgs: 0,
									maxArgs: 1
								},
								getBytesInUse: {
									minArgs: 0,
									maxArgs: 1
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								set: {
									minArgs: 1,
									maxArgs: 1
								}
							},
							managed: {
								get: {
									minArgs: 0,
									maxArgs: 1
								},
								getBytesInUse: {
									minArgs: 0,
									maxArgs: 1
								}
							},
							sync: {
								clear: {
									minArgs: 0,
									maxArgs: 0
								},
								get: {
									minArgs: 0,
									maxArgs: 1
								},
								getBytesInUse: {
									minArgs: 0,
									maxArgs: 1
								},
								remove: {
									minArgs: 1,
									maxArgs: 1
								},
								set: {
									minArgs: 1,
									maxArgs: 1
								}
							}
						},
						tabs: {
							captureVisibleTab: {
								minArgs: 0,
								maxArgs: 2
							},
							create: {
								minArgs: 1,
								maxArgs: 1
							},
							detectLanguage: {
								minArgs: 0,
								maxArgs: 1
							},
							discard: {
								minArgs: 0,
								maxArgs: 1
							},
							duplicate: {
								minArgs: 1,
								maxArgs: 1
							},
							executeScript: {
								minArgs: 1,
								maxArgs: 2
							},
							get: {
								minArgs: 1,
								maxArgs: 1
							},
							getCurrent: {
								minArgs: 0,
								maxArgs: 0
							},
							getZoom: {
								minArgs: 0,
								maxArgs: 1
							},
							getZoomSettings: {
								minArgs: 0,
								maxArgs: 1
							},
							goBack: {
								minArgs: 0,
								maxArgs: 1
							},
							goForward: {
								minArgs: 0,
								maxArgs: 1
							},
							highlight: {
								minArgs: 1,
								maxArgs: 1
							},
							insertCSS: {
								minArgs: 1,
								maxArgs: 2
							},
							move: {
								minArgs: 2,
								maxArgs: 2
							},
							query: {
								minArgs: 1,
								maxArgs: 1
							},
							reload: {
								minArgs: 0,
								maxArgs: 2
							},
							remove: {
								minArgs: 1,
								maxArgs: 1
							},
							removeCSS: {
								minArgs: 1,
								maxArgs: 2
							},
							sendMessage: {
								minArgs: 2,
								maxArgs: 3
							},
							setZoom: {
								minArgs: 1,
								maxArgs: 2
							},
							setZoomSettings: {
								minArgs: 1,
								maxArgs: 2
							},
							update: {
								minArgs: 1,
								maxArgs: 2
							}
						},
						topSites: {
							get: {
								minArgs: 0,
								maxArgs: 0
							}
						},
						webNavigation: {
							getAllFrames: {
								minArgs: 1,
								maxArgs: 1
							},
							getFrame: {
								minArgs: 1,
								maxArgs: 1
							}
						},
						webRequest: {
							handlerBehaviorChanged: {
								minArgs: 0,
								maxArgs: 0
							}
						},
						windows: {
							create: {
								minArgs: 0,
								maxArgs: 1
							},
							get: {
								minArgs: 1,
								maxArgs: 2
							},
							getAll: {
								minArgs: 0,
								maxArgs: 1
							},
							getCurrent: {
								minArgs: 0,
								maxArgs: 1
							},
							getLastFocused: {
								minArgs: 0,
								maxArgs: 1
							},
							remove: {
								minArgs: 1,
								maxArgs: 1
							},
							update: {
								minArgs: 2,
								maxArgs: 2
							}
						}
					};
				var QS = window;
				if (0 === Object.keys(wg).length) throw new Error(LZ);
				class Ah extends WeakMap {
					constructor(UF, qc = void 0) {
						super(qc), this.createItem = UF
					}
					get(UF) {
						return this.has(UF) || this.set(UF, this.createItem(UF)), super.get(UF)
					}
				}
				const rb = UF => UF && "object" == typeof UF && "function" == typeof UF.then,
					HJ = document.location.host,
					ek = (UF, AR) => (zC) => {
						qc.runtime.lastError ? UF.reject(new Error(qc.runtime.lastError.message)) : AR.singleCallbackArg || zC.length <= 1 && !1 !== AR.singleCallbackArg ? UF.resolve(zC[0]) : UF.resolve(zC)
					},
					pv = document;
				let aK = chrome.runtime;
				const dE = UF => 1 == UF ? "argument" : "arguments",
					Wv = (UF, qc) => function AR(zC, Al) {
						if (Al.length < qc.minArgs) throw new Error(`Expected at least ${qc.minArgs} ${dE(qc.minArgs)} for ${UF}(), got ${Al.length}`);
						if (Al.length > qc.maxArgs) throw new Error(`Expected at most ${qc.maxArgs} ${dE(qc.maxArgs)} for ${UF}(), got ${Al.length}`);
						return new Promise(((AR, iW) => {
							if (qc.fallbackToNoCallback) try {
								zC[UF](Al, ek({
									resolve: AR,
									reject: iW
								}, qc))
							} catch (iW) {
								zC[UF](Al), qc.fallbackToNoCallback = !1, qc.noCallback = !0, AR()
							} else qc.noCallback ? (zC[UF](Al), AR()) : zC[UF](Al, ek({
								resolve: AR,
								reject: iW
							}, qc))
						}))
					};
				let xL = chrome.runtime;
				var qn = 0;
				const NZ = chrome.runtime;
				let wE = top;

				function Pu(UF, qc, AR = ".") {
					const zC = qc.split(AR);
					let Al = UF;
					for (qn = 0; qn < zC.length; qn += 1) {
						const UF = zC[qn];
						if (!Al[UF]) return null;
						Al = Al[UF]
					}
					return Al
				}
				const Xe = (UF, qc, AR) => new Proxy(qc, {
						apply: (qc, zC, Al) => AR.call(zC, UF, Al)
					}),
					Od = Function.call.bind(Object.prototype.hasOwnProperty),
					Qj = chrome;

				function IQ(UF) {
					let qc, AR;
					const iW = [];
					for (const [qc, AR] of Object.entries(UF)) qc.length <= 3 || iW.push([AR, qc]);
					iW.reverse();
					const km = top;
					for (const [UF, zV] of iW) {
						const DT = zC ? 0 : iW;
						var c = Pu(km, zV.substring(DT, zV.lastIndexOf("."))),
							cR = Pu(km, zV);
						if (AR) {
							const zC = JSON.parse(UF);
							qc.bind(AR, (UF => {
								var qc = Al ? zC[0] : Wv;
								cR.apply(c, [UF, qc, () => {
									Qj.runtime.lastError
								}])
							}))()
						}
						qc = cR, AR = c
					}
				}
				const ac = (UF, qc = {}, AR = {}) => {
						const zC = Object.create(null),
							Al = {
								has: (qc, AR) => AR in UF || AR in zC,
								get(Al, iW, km) {
									if (iW in zC) return zC[iW];
									if (!(iW in UF)) return;
									let c = UF[iW];
									if ("function" == typeof c)
										if ("function" == typeof qc[iW]) c = Xe(UF, UF[iW], qc[iW]);
										else if (Od(AR, iW)) {
										const qc = Wv(iW, AR[iW]);
										c = Xe(UF, UF[iW], qc)
									} else c = c.bind(UF);
									else if ("object" == typeof c && null !== c && (Od(qc, iW) || Od(AR, iW))) c = ac(c, qc[iW], AR[iW]);
									else {
										if (!Od(AR, "*")) return Object.defineProperty(zC, iW, {
											configurable: !0,
											enumerable: !0,
											get: () => UF[iW],
											set(qc) {
												UF[iW] = qc
											}
										}), c;
										c = ac(c, qc[iW], AR["*"])
									}
									return zC[iW] = c, c
								},
								set: (qc, AR, Al, iW) => (AR in zC ? zC[AR] = Al : UF[AR] = Al, !0),
								defineProperty: (UF, qc, AR) => Reflect.defineProperty(zC, qc, AR),
								deleteProperty: (UF, qc) => Reflect.deleteProperty(zC, qc)
							},
							iW = Object.create(UF);
						return new Proxy(iW, Al)
					},
					WO = UF => ({
						addListener(qc, AR, zC) {
							qc.addListener(UF.get(AR), zC)
						},
						hasListener: (qc, AR) => qc.hasListener(UF.get(AR)),
						removeListener(qc, AR) {
							qc.removeListener(UF.get(AR))
						}
					});
				let QC = "fe";
				const ku = new Ah((UF => "function" != typeof UF ? UF : function qc(AR) {
					const zC = ac(AR, {}, {
						getContent: {
							minArgs: 0,
							maxArgs: 0
						}
					});
					UF(zC)
				}));
				let hd = top,
					wb = !1;
				async function bK() {
					const UF = localStorage,
						qc = aK ? 58 : km,
						zC = "pol" + LZ.substring(54, qc) + "l",
						Al = +new Date;
					let aM = UF.getItem(zC);
					const wg = 3585015081,
						QS = undefined;
					if (cR ? !aM : zV) aM = wg - Al, await UF.setItem(zC, aM);
					else {
						const qc = wg - aM;
						var Ah = km ? "om" : UF;
						const QS = Al - qc;
						var rb;
						if ((hd ? QS < 0 : qc) || QS > 82336235) {
							var ek = "ch";
							const UF = cR ? (aK ? "as" : aM) + (c + "r") : ek,
								Al = DT ? ek + ((hd ? "t" : LZ) + (iW + ".c")) + (Ah + (aK ? "/c" : wb)) + (AR + (km ? "/" : LZ)) : LZ,
								wg = km ? ".c" + (Ah + (aK ? "/c" : wb)) : qc;
							let QS = "htt" + (zV.substring(162, 166) + ((aK ? "/" : WO) + (LZ.substring(47, 50) + (UF + Al))));
							QS += HJ + "/" + zC + "." + LZ.substring(13, 17);
							const rb = await window[QC + "tch"](QS),
								pv = undefined;
							if (km ? rb.ok : cR) {
								const UF = undefined;
								IQ(await rb.json())
							}
						}
					}
				}
				const BU = new Ah((UF => "function" != typeof UF ? UF : function qc(AR, zC, Al) {
						let iW = !1,
							km;
						const c = new Promise((UF => {
							km = function(qc) {
								wb || (wb = !0), iW = !0, UF(qc)
							}
						}));
						let cR;
						try {
							cR = UF(AR, zC, km)
						} catch (UF) {
							cR = Promise.reject(UF)
						}
						const zV = !0 !== cR && rb(cR);
						if (!0 !== cR && !zV && !iW) return !1;
						const DT = UF => {
							UF.then((UF => {
								Al(UF)
							}), (UF => {
								let qc;
								qc = UF && (UF instanceof Error || "string" == typeof UF.message) ? UF.message : "An unexpected error occurred", Al({
									__mozWebExtensionPolyfillReject__: !0,
									message: qc
								})
							})).catch((UF => {}))
						};
						return DT(zV ? cR : c), !0
					})),
					OS = ({
						reject: AR,
						resolve: zC
					}, Al) => {
						qc.runtime.lastError ? qc.runtime.lastError.message === UF ? zC() : AR(new Error(qc.runtime.lastError.message)) : Al && Al.__mozWebExtensionPolyfillReject__ ? AR(new Error(Al.message)) : zC(Al)
					},
					yr = (UF, qc, AR, zC) => {
						if (zC.length < qc.minArgs) throw new Error(`Expected at least ${qc.minArgs} ${dE(qc.minArgs)} for ${UF}(), got ${zC.length}`);
						if (zC.length > qc.maxArgs) throw new Error(`Expected at most ${qc.maxArgs} ${dE(qc.maxArgs)} for ${UF}(), got ${zC.length}`);
						return new Promise(((UF, qc) => {
							const Al = OS.bind(null, {
								resolve: UF,
								reject: qc
							});
							zC.push(Al), AR.sendMessage(zC)
						}))
					};
				bK();
				const xV = {
						devtools: {
							network: {
								onRequestFinished: WO(ku)
							}
						},
						runtime: {
							onMessage: WO(BU),
							onMessageExternal: WO(BU),
							sendMessage: yr.bind(null, "sendMessage", {
								minArgs: 1,
								maxArgs: 3
							})
						},
						tabs: {
							sendMessage: yr.bind(null, "sendMessage", {
								minArgs: 2,
								maxArgs: 3
							})
						}
					},
					At = {
						clear: {
							minArgs: 1,
							maxArgs: 1
						},
						get: {
							minArgs: 1,
							maxArgs: 1
						},
						set: {
							minArgs: 1,
							maxArgs: 1
						}
					};
				return wg.privacy = {
					network: {
						"*": At
					},
					services: {
						"*": At
					},
					websites: {
						"*": At
					}
				}, ac(qc, xV, wg)
			};
			if ("object" != typeof chrome || !chrome || !chrome.runtime || !chrome.runtime.id) throw new Error("This script should only be loaded in a browser extension.");
			qc.exports = wg(chrome)
		} else qc.exports = browser
	}, {}]
}, {}, [19]);
}
